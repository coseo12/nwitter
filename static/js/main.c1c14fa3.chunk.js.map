{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","update","className","type","value","onChange","target","placeholder","required","onClick","src","alt","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","AuthForm","newAccount","setNewAccount","email","setEmail","password","setPassword","error","setError","onChage","name","createUserWithEmailAndPassword","console","log","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1c14fa3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl)\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              value={newNweet}\n              onChange={onChange}\n              placeholder=\"Edit your nweet\"\n              required\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\n          )}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { storageService, dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const onSubmit = async event => {\n    if (nweet === '') return;\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment) {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = event => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      const {\n        target: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(null);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          className=\"factoryInput__input\"\n        />\n\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map(nweet => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\n// const inputStyles = {};\n\nconst AuthForm = () => {\n  const [newAccount, setNewAccount] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const onChage = event => {\n    event.preventDefault();\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') setEmail(value);\n    else if (name === 'password') setPassword(value);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data = null;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        console.log(data);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChage}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChage}\n          className=\"authInput\"\n        />\n        <button type=\"submit\" className=\"authInput authSubmit\">\n          {newAccount ? 'Create Account' : 'Log In'}\n        </button>\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign in' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = event => {\n    const {\n      target: { name },\n    } = event;\n    let provider = null;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button\n          className=\"authBtn\"\n          name=\"google\"\n          type=\"button\"\n          onClick={onSocialClick}\n        >\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button\n          className=\"authBtn\"\n          name=\"github\"\n          type=\"button\"\n          onClick={onSocialClick}\n        >\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n    refreshUser();\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          onChange={onChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n          type=\"submit\"\n          value=\"Update Profile\"\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj ? `${userObj.displayName}의 Profile` : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from 'routes/Home';\nimport Auth from 'routes/Auth';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: '100%',\n                margin: '0 auto',\n                marginTop: 80,\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile refreshUser={refreshUser} userObj={userObj} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          userObj={userObj}\n          isLoggedIn={isLoggedIn}\n          refreshUser={refreshUser}\n          setIsLoggedIn={setIsLoggedIn}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}